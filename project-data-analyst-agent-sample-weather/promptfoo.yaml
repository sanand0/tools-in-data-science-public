description: "Sample evaluation â€“ weather dataset"

providers:
  - id: https
    config:
      url: https://app.example.com/api/ # Replace with your API endpoint
      method: POST
      body: file://question.txt
      transformResponse: json

assert:
  - type: is-json
    value:
      type: object
      required:
        [
          average_temp_c,
          max_precip_date,
          min_temp_c,
          temp_precip_correlation,
          average_precip_mm,
          temp_line_chart,
          precip_histogram,
        ]
      properties:
        average_temp_c: { type: number }
        max_precip_date: { type: string }
        min_temp_c: { type: number }
        temp_precip_correlation: { type: number }
        average_precip_mm: { type: number }
        temp_line_chart: { type: string }
        precip_histogram: { type: string }
  - type: python
    weight: 3
    value: |
      import json, math
      val = float(json.loads(output)["average_temp_c"])
      print(abs(val - 5.1) <= 0.001)
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["max_precip_date"] == "2024-01-06")
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["min_temp_c"] == 2)
  - type: python
    weight: 3
    value: |
      import json, math
      val = float(json.loads(output)["temp_precip_correlation"])
      print(abs(val - 0.0413519224) <= 0.001)
  - type: python
    weight: 3
    value: |
      import json, math
      val = float(json.loads(output)["average_precip_mm"])
      print(abs(val - 0.9) <= 0.001)
  - type: llm-rubric
    provider: openai:gpt-4.1-nano
    weight: 8
    preprocess: |
      import json
      data = json.loads(output)
      context["plot"] = data["temp_line_chart"]
    rubricPrompt: |
      [
        {"role":"system","content":"Grade the temperature line chart. Score 1 only if (a) line chart of temperature over time; (b) line is red; (c) axes visible and labelled; (d) file size < 100 kB. Respond JSON {line:bool,color:bool,axes:bool,size:bool,score:number}"},
        {"role":"user","content":[
          {"type":"image_url","image_url":{"url":"{{plot}}"}},
          {"type":"text","text":"{{vars.question}}"}
        ]}
      ]
    threshold: 0.99
  - type: llm-rubric
    provider: openai:gpt-4.1-nano
    weight: 8
    preprocess: |
      import json
      data = json.loads(output)
      context["plot"] = data["precip_histogram"]
    rubricPrompt: |
      [
        {"role":"system","content":"Grade the precipitation histogram. Score 1 only if (a) histogram of precipitation amounts; (b) bars are orange; (c) axes visible and labelled; (d) file size < 100 kB. Respond JSON {histogram:bool,color:bool,axes:bool,size:bool,score:number}"},
        {"role":"user","content":[
          {"type":"image_url","image_url":{"url":"{{plot}}"}},
          {"type":"text","text":"{{vars.question}}"}
        ]}
      ]
    threshold: 0.99

tests:
  - description: Weather analysis
    vars:
      question: file://question.txt
