description: "Sample evaluation â€“ network dataset"

providers:
  - id: https
    config:
      url: https://app.example.com/api/ # Replace with your API endpoint
      method: POST
      body: file://question.txt
      transformResponse: json

assert:
  - type: is-json
    value:
      type: object
      required:
        [
          edge_count,
          highest_degree_node,
          average_degree,
          density,
          shortest_path_alice_eve,
          network_graph,
          degree_histogram,
        ]
      properties:
        edge_count: { type: number }
        highest_degree_node: { type: string }
        average_degree: { type: number }
        density: { type: number }
        shortest_path_alice_eve: { type: number }
        network_graph: { type: string }
        degree_histogram: { type: string }
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["edge_count"] == 7)
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["highest_degree_node"].lower() == "bob")
  - type: python
    weight: 3
    value: |
      import json, math
      val = float(json.loads(output)["average_degree"])
      print(abs(val - 2.8) <= 0.001)
  - type: python
    weight: 3
    value: |
      import json, math
      val = float(json.loads(output)["density"])
      print(abs(val - 0.7) <= 0.001)
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["shortest_path_alice_eve"] == 2)
  - type: llm-rubric
    provider: openai:gpt-4.1-nano
    weight: 8
    preprocess: |
      import json
      data = json.loads(output)
      context["graph"] = data["network_graph"]
    rubricPrompt: |
      [
        {"role":"system","content":"Grade the network graph. Score 1 only if (a) nodes Alice, Bob, Carol, David, Eve are labelled; (b) edges match edges.csv; (c) layout is clear; (d) file size < 100 kB. Respond JSON {nodes:bool,edges:bool,layout:bool,size:bool,score:number}"},
        {"role":"user","content":[
          {"type":"image_url","image_url":{"url":"{{graph}}"}},
          {"type":"text","text":"{{vars.question}}"}
        ]}
      ]
    threshold: 0.99
  - type: llm-rubric
    provider: openai:gpt-4.1-nano
    weight: 8
    preprocess: |
      import json
      data = json.loads(output)
      context["plot"] = data["degree_histogram"]
    rubricPrompt: |
      [
        {"role":"system","content":"Grade the degree histogram. Score 1 only if (a) bar chart of node degree counts; (b) bars are green; (c) axes visible and labelled; (d) file size < 100 kB. Respond JSON {bars:bool,color:bool,axes:bool,size:bool,score:number}"},
        {"role":"user","content":[
          {"type":"image_url","image_url":{"url":"{{plot}}"}},
          {"type":"text","text":"{{vars.question}}"}
        ]}
      ]
    threshold: 0.99

tests:
  - description: Network analysis
    vars:
      question: file://question.txt
