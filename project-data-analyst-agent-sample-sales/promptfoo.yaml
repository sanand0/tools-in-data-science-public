description: "Sample evaluation â€“ sales dataset"

providers:
  - id: https
    config:
      url: https://app.example.com/api/ # Replace with your API endpoint
      method: POST
      body: file://question.txt
      transformResponse: json

assert:
  - type: is-json
    value:
      type: object
      required:
        [
          total_sales,
          top_region,
          day_sales_correlation,
          bar_chart,
          median_sales,
          total_sales_tax,
          cumulative_sales_chart,
        ]
      properties:
        total_sales: { type: number }
        top_region: { type: string }
        day_sales_correlation: { type: number }
        bar_chart: { type: string }
        median_sales: { type: number }
        total_sales_tax: { type: number }
        cumulative_sales_chart: { type: string }
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["total_sales"] == 1140)
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["top_region"].lower() == "west")
  - type: python
    weight: 3
    value: |
      import json, math
      val = float(json.loads(output)["day_sales_correlation"])
      print(abs(val - 0.2228124549277306) <= 0.001)
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["median_sales"] == 140)
  - type: python
    weight: 3
    value: |
      import json
      print(json.loads(output)["total_sales_tax"] == 114)
  - type: llm-rubric
    provider: openai:gpt-4.1-nano
    weight: 8
    preprocess: |
      import json
      data = json.loads(output)
      context["plot"] = data["bar_chart"]
    rubricPrompt: |
      [
        {"role":"system","content":"Grade the bar chart. Score 1 only if (a) bar chart of total sales by region; (b) bars are blue; (c) axes visible and labelled; (d) file size < 100 kB. Respond JSON {bars:bool,color:bool,axes:bool,size:bool,score:number}"},
        {"role":"user","content":[
          {"type":"image_url","image_url":{"url":"{{plot}}"}},
          {"type":"text","text":"{{vars.question}}"}
        ]}
      ]
    threshold: 0.99
  - type: llm-rubric
    provider: openai:gpt-4.1-nano
    weight: 8
    preprocess: |
      import json
      data = json.loads(output)
      context["plot"] = data["cumulative_sales_chart"]
    rubricPrompt: |
      [
        {"role":"system","content":"Grade the line chart. Score 1 only if (a) line chart of cumulative sales over time; (b) line is red; (c) axes visible and labelled; (d) file size < 100 kB. Respond JSON {line:bool,color:bool,axes:bool,size:bool,score:number}"},
        {"role":"user","content":[
          {"type":"image_url","image_url":{"url":"{{plot}}"}},
          {"type":"text","text":"{{vars.question}}"}
        ]}
      ]
    threshold: 0.99

tests:
  - description: Sales analysis
    vars:
      question: file://question.txt
